Card Flipping Game

Step 1 - Create/clone a GitHub repository
Step 2 - Edit your files

scripts.java   ---> Where the whole magic happens. You can edit the images to your choice. 
style.css      ---> Styling, transition and layout
index.html     ---> For web browser view for the game

Step 3 - create S3 bucket in AWS
- Give a name
- Enable static website option
- Enable necessary permissions on the bucket => Turn OFF "block public access" 
- Add bucket policy 
*************************************************
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "PublicReadGetObject",
            "Effect": "Allow",
            "Principal": "*",
            "Action": [
                "s3:GetObject"
            ],
            "Resource": [
                "arn:aws:s3:::YOUR-BUCKET-NAME/*"
            ]
        }
    ]
} 
**********************************************
- Upload your files (above)

Step 4 - Set up Code Pipeline
- Navigate and open AWS CodePipeline
- create pipeline => 
*name it 
*pipeline type = V1
*service role = new
*execution mode = superseded
- Select the source provider - This is where you stored your input artifacts for your pipeline.
*GitHub (Version2)
*Connect to GitHub => a new page will open => create a connection name => Authorize => Install a new app =>log in to your GitHub => Only select repositories => Select the repo you created for the game => Save =>  Connect
- You should see "Ready to connect" on AWS with a green check mark
- Select your repository name
*default branch = main
*output artifact format = CodePipeline default => NEXT
- SKIP BUILD STAGE
- Choose how you deploy to instances. Choose the provider, and then provide the configuration details for that provider.
*AWS S3
*region
*bucket = the one you created on S3 for the game
*S3 object key = click on "Extract file before deploy". This will make this requirement disappear and display "Deployment path -optional"  = NEXT
- REVIEW all the configurations => CREATE PIPELINE
- After deployment, you should see the stages shown as "Succeeded" for both Source and Deploy.

Step 5 - Go back to your AWS S3 bucket
- Click properties tab => static website hosting => click on the endpoint
- A new web browser page will open automatically. The game is ready to be played

Step 6 - Making changes on GitHub to reflect in the AWS CodePipeline
- Go to your GitHub page => click the index.html file => make some edit => commit the changes
- AWS Codepipeline will automatically detect the changes and redeploy the pipeline.
- Refresh the web browser, you should the edit.
